model {
  for(i in 1:N) {
    x1[i] ~ dnorm(mu[i,1], 1/theta[1,1,g[i]])
    x2[i] ~ dnorm(mu[i,2], 1/theta[2,2,g[i]])
    x3[i] ~ dnorm(mu[i,3], 1/theta[3,3,g[i]])

    # lvs
    eta[i,1:2] ~ dmnorm(mu_eta[i,1:2], ibpsi[1:2,1:2,g[i]])
  }

  # mu definitions
  for(i in 1:N) {
    mu[i,1] <- nu[1,1,g[i]] + lambda[1,1,g[i]]*eta[i,1] + lambda[1,2,g[i]]*eta[i,2]
    mu[i,2] <- nu[2,1,g[i]] + lambda[2,1,g[i]]*eta[i,1] + lambda[2,2,g[i]]*eta[i,2]
    mu[i,3] <- nu[3,1,g[i]] + lambda[3,1,g[i]]*eta[i,1] + lambda[3,2,g[i]]*eta[i,2]

    mu_eta[i,1] <- alpha[1,1,g[i]]
    mu_eta[i,2] <- alpha[2,1,g[i]]
  }

  # Assignments from parameter vector & equality constraints
  lambda[1,1,1] <- 1
  lambda[2,1,1] <- 1
  lambda[3,1,1] <- 1
  lambda[1,2,1] <- 0.083
  lambda[2,2,1] <- 0.25
  lambda[3,2,1] <- 1
  alpha[1,1,1] <- parvec[1]
  alpha[2,1,1] <- parvec[2]
  theta[1,1,1] <- pow(parvec[3],2)
  theta[2,2,1] <- pow(parvec[4],2)
  theta[3,3,1] <- pow(parvec[5],2)
  nu[1,1,1] <- 0
  nu[2,1,1] <- 0
  nu[3,1,1] <- 0
  psi[1,1,1] <- bpsi[1,1,1]
  psi[2,2,1] <- bpsi[2,2,1]
  psi[1,2,1] <- bpsi[1,2,1]
  # Priors
  parvec[1] ~ dnorm(35,0.01)
  parvec[2] ~ dnorm(-5,0.04)
  parvec[3] ~ dlnorm(0, 1)
  parvec[4] ~ dlnorm(0, 1)
  parvec[5] ~ dlnorm(0, 1)
  for(k in 1:1) {
    ibpsi[1:2,1:2,k] ~ dwish(iden,3)
    bpsi[1:2,1:2,k] <- inverse(ibpsi[1:2,1:2,k])
  }

}
